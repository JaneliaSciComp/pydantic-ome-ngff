[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pydantic-ome-ngff"
dynamic = ["version"]
description = "Pydantic models for the OME-NGFF file format."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["ngff", "pydantic", "ome-ngff", "zarr"]
authors = [
  { name = "Davis Vann Benntt", email = "davis.v.bennett@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "pydantic-zarr == 0.7.0"
]

[project.urls]
Documentation = "https://janeliascicomp.github.io/pydantic-ome-ngff"
Issues = "https://github.com/janeliascicomp/pydantic-ome-ngff/issues"
Source = "https://github.com/janeliascicomp/pydantic-ome-ngff"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/pydantic_ome_ngff/_version.py"

[tool.hatch.envs.test]
dependencies = [
  "pytest==8.0.0",
  "pytest-examples==0.0.9",
  "fsspec[http]==2024.2.0",
  "requests==2.32.3",
  "pytest-cov==5.0.0",
  "jsonschema==4.17.3"
  ]

[tool.hatch.envs.test.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov=tests"
run = "run-coverage --no-cov"
run-verbose = "run-coverage --verbose"

[[tool.hatch.envs.test.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pydantic_ome_ngff tests}"

[tool.hatch.env.docs]
dependencies = [
  "mkdocs-material==9.5.5",
  "mkdocstrings==0.24.0"
  ]

[tool.hatch.envs.docs.scripts]
serve = "mkdocs serve --watch=src"

[tool.coverage.run]
source_pkgs = ["pydantic_ome_ngff", "tests"]
branch = true
parallel = true
omit = [
  "src/pydantic_ome_ngff/_version.py",
]

[tool.coverage.paths]
pydantic_ome_ngff = ["src/pydantic_ome_ngff", "*/pydantic-ome-ngff/src/pydantic_ome_ngff"]
tests = ["tests", "*/pydantic-ome-ngff/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
